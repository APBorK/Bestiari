Применимость:

Когда в программе должен быть единственный экземпляр какого-то класса, доступный всем клиентам (например, общий доступ к базе данных из разных частей программы).

Одиночка скрывает от клиентов все способы создания нового объекта, кроме специального метода. Этот метод либо создаёт объект, либо отдаёт существующий объект, если он уже был создан.

Когда вам хочется иметь больше контроля над глобальными переменными.

В отличие от глобальных переменных, Одиночка гарантирует, что никакой другой код не заменит созданный экземпляр класса, поэтому вы всегда уверены в наличии лишь одного объекта-одиночки.
Тем не менее, в любой момент вы можете расширить это ограничение и позволить любое количество объектов-одиночек, поменяв код в одном месте (метод getInstance).

Шаги реализации:

1.Добавьте в класс приватное статическое поле, которое будет содержать одиночный объект.

2.Объявите статический создающий метод, который будет использоваться для получения одиночки.

3.Добавьте «ленивую инициализацию» (создание объекта при первом вызове метода) в создающий метод одиночки.

4.Сделайте конструктор класса приватным.

5.В клиентском коде замените вызовы конструктора одиночка вызовами его создающего метода.